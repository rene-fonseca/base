jobs:
- job: macos_self
  pool:
    name: Default
    demands: agent.os -equals Darwin
  steps:
  - task: CMake@1
    displayName: 'Config'
    inputs:
      cmakeArgs: '..'

  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install -- -j 4'

  - task: CmdLine@2
    displayName: 'Run tests'
    continueOnError: true
    inputs:
      script: |
        $(System.DefaultWorkingDirectory)/build/testsuite/unittesting --junit $(System.DefaultWorkingDirectory)/build/junit.xml
        ctest -T Test
      workingDirectory: $(System.DefaultWorkingDirectory)/build

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Unittest results'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
      testRunTitle: 'Test results for CTest'

#  - task: PublishPipelineArtifact@1
#    inputs:
#      artifactName: 'base-macos'
#      targetPath: 'artifacts'
#      path: $(System.DefaultWorkingDirectory)/build/install

- job: macos_emscripten_self
  pool:
    name: Default
    demands: agent.os -equals Darwin
  steps:
  - task: CmdLine@2
    displayName: 'Config'
    inputs:
      script: |
      source ~/emsdk/emsdk_env.sh
      emcmake cmake ..
      workingDirectory: $(System.DefaultWorkingDirectory)/build
#  - task: CMake@1
#    displayName: 'Config'
#    inputs:
#      cmakeArgs: '..'

  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install -- -j 4'

#   - task: CmdLine@2
#    displayName: 'Run tests'
#    continueOnError: true
#    inputs:
#      script: |
#        $(System.DefaultWorkingDirectory)/build/testsuite/unittesting --junit $(System.DefaultWorkingDirectory)/build/junit.xml
#        ctest -T Test
#      workingDirectory: $(System.DefaultWorkingDirectory)/build

#  - task: PublishTestResults@2
#    inputs:
#      testResultsFormat: 'JUnit'
#      testResultsFiles: '**/junit.xml'
#      testRunTitle: 'Unittest results'

#  - task: PublishTestResults@2
#    inputs:
#      testResultsFormat: 'cTest'
#      testResultsFiles: '**/Test.xml'
#      testRunTitle: 'Test results for CTest'
