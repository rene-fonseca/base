trigger:
  - master

pr:
  - master

variables:
  CLICOLOR_FORCE: 1 # used by Base tools

jobs:
- job: macos_self
  pool:
    name: Default
    demands: agent.os -equals Darwin
  steps:
  - task: CMake@1
    displayName: 'Config'
    inputs:
      cmakeArgs: '.. -DCOLOR=1'

  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install -- -j 4'

  - task: CmdLine@2
    displayName: 'Run tests'
    continueOnError: true
    inputs:
      script: |
        ./testsuite/unittesting --junit junit.xml
        ctest -T Test
      workingDirectory: $(System.DefaultWorkingDirectory)/build

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Unittest results'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
      testRunTitle: 'Test results for CTest'

#  - task: PublishPipelineArtifact@1
#    inputs:
#      artifactName: 'base-macos'
#      targetPath: 'artifacts'
#      path: $(System.DefaultWorkingDirectory)/build/install

- job: macos_emscripten_self
  pool:
    name: Default
    demands: agent.os -equals Darwin
  steps:
  - task: CmdLine@2
    displayName: 'Config'
    inputs:
      script: |
        mkdir -p emscripten
        cd emscripten
        source ~/emsdk/emsdk_env.sh
        emcmake cmake .. -DCOLOR=1
      workingDirectory: $(System.DefaultWorkingDirectory)
#  - task: CMake@1
#    displayName: 'Config'
#    inputs:
#      cmakeArgs: '..'

  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install -- -j 4'
      workingDirectory: $(System.DefaultWorkingDirectory)/emscripten

  - task: CmdLine@2
    displayName: 'Run tests'
    continueOnError: true
    inputs:
      script: |
        source ~/emsdk/emsdk_env.sh
        node --experimental-wasm-threads --experimental-wasm-bulk-memory testsuite/unittesting.js --junit junit.xml
        ctest -T Test
      workingDirectory: $(System.DefaultWorkingDirectory)/emscripten

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Unittest results'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
      testRunTitle: 'Test results for CTest'


- job: macos_wasi_self
  pool:
    name: Default
    demands: agent.os -equals Darwin
  steps:
  - task: CmdLine@2
    displayName: 'Pre-Config'
    inputs:
      script: |
        mkdir -p wasi
        cd wasi
      workingDirectory: $(System.DefaultWorkingDirectory)

  - task: CMake@1
    displayName: 'Config'
    inputs:
      cmakeArgs: '.. -DCOLOR=1 -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=/usr/local/wasi-sdk/share/cmake/wasi-sdk.cmake -DWASI_SDK_PREFIX=/usr/local/wasi-sdk'
      workingDirectory: $(System.DefaultWorkingDirectory)/wasi

  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install -- -j 4'
      workingDirectory: $(System.DefaultWorkingDirectory)/wasi

  - task: CmdLine@2
    displayName: 'Run tests'
    continueOnError: true
    inputs:
      script: |
        # ./testsuite/unittesting.js --junit junit.xml
        ctest -T Test
      workingDirectory: $(System.DefaultWorkingDirectory)/wasi

#  - task: PublishTestResults@2
#    inputs:
#      testResultsFormat: 'JUnit'
#      testResultsFiles: '**/junit.xml'
#      testRunTitle: 'Unittest results'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
      testRunTitle: 'Test results for CTest'

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'base-wasi'
      targetPath: 'artifacts'
      path: $(System.DefaultWorkingDirectory)/wasi/install
