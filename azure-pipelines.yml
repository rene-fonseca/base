trigger:
- master

jobs:
- job: windows
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: CMake@1
    displayName: 'Config'
    inputs:
      cmakeArgs: '..'

  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install'

  - task: CmdLine@2
    displayName: 'Run tests'
    continueOnError: true
    inputs:
      script: |
        set PATH=%PATH%;$(System.DefaultWorkingDirectory)/build/Debug
        $(System.DefaultWorkingDirectory)/build/testsuite/Debug/unittesting --junit $(System.DefaultWorkingDirectory)/build/junit.xml
        rem $(System.DefaultWorkingDirectory)/testsuite/Debug/unittesting --junit $(System.DefaultWorkingDirectory)/junit.xml
        ctest -T Test -C Debug
      workingDirectory: $(System.DefaultWorkingDirectory)/build

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Unittest results'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
      testRunTitle: 'Test results for CTest'

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'base-windows'
      targetPath: 'artifacts'
      path: $(System.DefaultWorkingDirectory)/build/install

- job: ubuntu-18.04
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - task: CMake@1
    displayName: 'Config'
    inputs:
      cmakeArgs: '..'

  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install -- -j 4'

  - task: CmdLine@2
    displayName: 'Run tests'
    continueOnError: true
    inputs:
      script: |
        $(System.DefaultWorkingDirectory)/build/testsuite/unittesting --junit $(System.DefaultWorkingDirectory)/build/junit.xml
        ctest -T Test
      workingDirectory: $(System.DefaultWorkingDirectory)/build

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Unittest results'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
      testRunTitle: 'Test results for CTest'

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'base-ubuntu18'
      targetPath: 'artifacts'
      path: $(System.DefaultWorkingDirectory)/build/install

- job: ubuntu-16.04
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: CMake@1
    displayName: 'Config'
    inputs:
      cmakeArgs: '..'

  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install -- -j 4'

  - task: CmdLine@2
    displayName: 'Run tests'
    continueOnError: true
    inputs:
      script: |
        $(System.DefaultWorkingDirectory)/build/testsuite/unittesting --junit $(System.DefaultWorkingDirectory)/build/junit.xml
        ctest -T Test
      workingDirectory: $(System.DefaultWorkingDirectory)/build

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Unittest results'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
      testRunTitle: 'Test results for CTest'

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'base-ubuntu16'
      targetPath: 'artifacts'
      path: $(System.DefaultWorkingDirectory)/build/install

- job: macos
  pool:
    vmImage: 'macOS-latest'
  steps:
  - task: CMake@1
    displayName: 'Config'
    inputs:
      cmakeArgs: '..'

  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install -- -j 4'

  - task: CmdLine@2
    displayName: 'Run tests'
    continueOnError: true
    inputs:
      script: |
        $(System.DefaultWorkingDirectory)/build/testsuite/unittesting --junit $(System.DefaultWorkingDirectory)/build/junit.xml
        ctest -T Test
      workingDirectory: $(System.DefaultWorkingDirectory)/build

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Unittest results'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
      testRunTitle: 'Test results for CTest'

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'base-macos'
      targetPath: 'artifacts'
      path: $(System.DefaultWorkingDirectory)/build/install
