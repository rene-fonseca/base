trigger:
  batch: true
  branches:
    include:
    - master

pr:
- master

variables:
  CLICOLOR_FORCE: 1 # used by Base tools

resources:
  containers:
  - container: centos
    image: renefonseca/base-centos8:latest
  - container: fedora
    image: renefonseca/base-fedora:latest
  - container: wasi
    image: renefonseca/base-wasi:latest

jobs:
- job: windows
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: CMake@1
    displayName: 'Config'
    inputs:
      cmakeArgs: '.. -DCOLOR=1 -DCMAKE_INSTALL_PREFIX=install'
  
  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install'

  - task: CmdLine@2
    displayName: 'Run tests'
    continueOnError: true
    inputs:
      script: |
        set PATH=%PATH%;$(System.DefaultWorkingDirectory)/build/Debug
        $(System.DefaultWorkingDirectory)/build/testsuite/Debug/unittesting --junit $(System.DefaultWorkingDirectory)/build/junit.xml
        ctest -T Test -C Debug
      workingDirectory: $(System.DefaultWorkingDirectory)/build

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Unittest results'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
      testRunTitle: 'Test results for CTest'

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'base-windows-x64'
      targetPath: 'artifacts'
      path: $(System.DefaultWorkingDirectory)/build/install

- job: windows_x86
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: CMake@1
    displayName: 'Config'
    inputs:
      cmakeArgs: '.. -A Win32 -DCOLOR=1 -DCMAKE_INSTALL_PREFIX=install'
  
  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install'

  - task: CmdLine@2
    displayName: 'Run tests'
    continueOnError: true
    inputs:
      script: |
        set PATH=%PATH%;$(System.DefaultWorkingDirectory)/build/Debug
        $(System.DefaultWorkingDirectory)/build/testsuite/Debug/unittesting --junit $(System.DefaultWorkingDirectory)/build/junit.xml
        ctest -T Test -C Debug
      workingDirectory: $(System.DefaultWorkingDirectory)/build

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Unittest results'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
      testRunTitle: 'Test results for CTest'

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'base-windows-x86'
      targetPath: 'artifacts'
      path: $(System.DefaultWorkingDirectory)/build/install

- job: windows_arm64
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: CMake@1
    displayName: 'Config'
    inputs:
      cmakeArgs: '.. -A ARM64 -DCOLOR=1 -DCMAKE_INSTALL_PREFIX=install'
  
  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install'

# TAG: need arm64 simulator for this to work or arm64 host
#  - task: CmdLine@2
#    displayName: 'Run tests'
#    continueOnError: true
#    inputs:
#      script: |
#        set PATH=%PATH%;$(System.DefaultWorkingDirectory)/build/Debug
#        $(System.DefaultWorkingDirectory)/build/testsuite/Debug/unittesting --junit $(System.DefaultWorkingDirectory)/build/junit.xml
#        ctest -T Test -C Debug
#      workingDirectory: $(System.DefaultWorkingDirectory)/build

#  - task: PublishTestResults@2
#    inputs:
#      testResultsFormat: 'JUnit'
#      testResultsFiles: '**/junit.xml'
#      testRunTitle: 'Unittest results'

#  - task: PublishTestResults@2
#    inputs:
#      testResultsFormat: 'cTest'
#      testResultsFiles: '**/Test.xml'
#      testRunTitle: 'Test results for CTest'

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'base-windows-arm64'
      targetPath: 'artifacts'
      path: $(System.DefaultWorkingDirectory)/build/install

- job: windows_arm32
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: CMake@1
    displayName: 'Config'
    inputs:
      cmakeArgs: '.. -A ARM -DCOLOR=1 -DCMAKE_INSTALL_PREFIX=install'
  
  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install'

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'base-windows-arm32'
      targetPath: 'artifacts'
      path: $(System.DefaultWorkingDirectory)/build/install

- job: ubuntu18_04
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - task: CMake@1
    displayName: 'Config'
    inputs:
      cmakeArgs: '.. -DCOLOR=1 -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=install'
  
  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install -- -j 4'

  - task: CmdLine@2
    displayName: 'Run tests'
    continueOnError: true
    inputs:
      script: |
        ./testsuite/unittesting --junit junit.xml
        ctest -T Test
      workingDirectory: $(System.DefaultWorkingDirectory)/build

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Unittest results'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
      testRunTitle: 'Test results for CTest'

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'base-ubuntu18'
      targetPath: 'artifacts'
      path: $(System.DefaultWorkingDirectory)/build/install

- job: centos8
  pool:
    vmImage: 'ubuntu-18.04'
  container: centos
  steps:
  - script: $(Build.SourcesDirectory)/ci/config.sh
    displayName: 'Config'
    workingDirectory: $(Build.BinariesDirectory)

  - script: $(Build.SourcesDirectory)/ci/build.sh
    displayName: 'Build'
    workingDirectory: $(Build.BinariesDirectory)

  - script: $(Build.SourcesDirectory)/ci/test.sh
    displayName: 'Run tests'
    continueOnError: true
    workingDirectory: $(Build.BinariesDirectory)

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Unittest results'
      searchFolder: '$(Build.BinariesDirectory)'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
      testRunTitle: 'Test results for CTest'
      searchFolder: '$(Build.BinariesDirectory)'

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'base-centos8'
      targetPath: 'artifacts'
      path: $(Build.BinariesDirectory)/install

- job: fedora_x64
  pool:
    vmImage: 'ubuntu-18.04'
  container: fedora
  steps:
  - script: $(Build.SourcesDirectory)/ci/config.sh
    displayName: 'Config'
    workingDirectory: $(Build.BinariesDirectory)

  - script: $(Build.SourcesDirectory)/ci/build.sh
    displayName: 'Build'
    workingDirectory: $(Build.BinariesDirectory)

  - script: $(Build.SourcesDirectory)/ci/test.sh
    displayName: 'Run tests'
    continueOnError: true
    workingDirectory: $(Build.BinariesDirectory)

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Unittest results'
      searchFolder: '$(Build.BinariesDirectory)'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
      testRunTitle: 'Test results for CTest'
      searchFolder: '$(Build.BinariesDirectory)'

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'base-fedora'
      targetPath: 'artifacts'
      path: $(Build.BinariesDirectory)/install

- job: wasm32
  pool:
    vmImage: 'ubuntu-18.04'
  container: wasi
  steps:
  - script: cmake $(Build.SourcesDirectory) -DCOLOR=1 -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=install -DCMAKE_TOOLCHAIN_FILE=/wasi-sdk-8.0/share/cmake/wasi-sdk.cmake -DWASI_SDK_PREFIX=/wasi-sdk-8.0
    displayName: 'Config'
    workingDirectory: $(Build.BinariesDirectory)

  - script: cmake --build . --config Debug --target install -- -j 4
    displayName: 'Build'
    workingDirectory: $(Build.BinariesDirectory)

  - script: |
      PATH=$PATH:/wasmtime
      wasmtime ./testsuite/unittesting --env=CLICOLOR_FORCE=1 --env=AGENT_BUILDDIRECTORY= -- --junit stderr 2> junit.xml
      ctest -T Test
    displayName: 'Run tests'
    continueOnError: true
    workingDirectory: $(Build.BinariesDirectory)

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Unittest results'
      searchFolder: '$(Build.BinariesDirectory)'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
      testRunTitle: 'Test results for CTest'
      searchFolder: '$(Build.BinariesDirectory)'

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'base-wasi'
      targetPath: 'artifacts'
      path: $(Build.BinariesDirectory)/install

- job: ubuntu16_04
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: CMake@1
    displayName: 'Config'
    inputs:
      cmakeArgs: '.. -DCOLOR=1 -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=install'
  
  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install -- -j 4'

  - task: CmdLine@2
    displayName: 'Run tests'
    continueOnError: true
    inputs:
      script: |
        ./testsuite/unittesting --junit junit.xml
        ctest -T Test
      workingDirectory: $(System.DefaultWorkingDirectory)/build

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Unittest results'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
      testRunTitle: 'Test results for CTest'

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'base-ubuntu16'
      targetPath: 'artifacts'
      path: $(System.DefaultWorkingDirectory)/build/install

- job: macos
  pool:
    vmImage: 'macOS-latest'
  steps:
  - task: CMake@1
    displayName: 'Config'
    inputs:
      cmakeArgs: '.. -DCOLOR=1 -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=install'

  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install -- -j 4'

  - task: CmdLine@2
    displayName: 'Run tests'
    continueOnError: true
    inputs:
      script: |
        ./testsuite/unittesting --junit junit.xml
        ctest -T Test
      workingDirectory: $(System.DefaultWorkingDirectory)/build

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Unittest results'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Test.xml'
      testRunTitle: 'Test results for CTest'

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'base-macos'
      targetPath: 'artifacts'
      path: $(System.DefaultWorkingDirectory)/build/install

- job: ios
  pool:
    vmImage: 'macOS-latest'
  steps:
  - task: CMake@1
    displayName: 'Config'
    inputs:
      cmakeArgs: '.. -DCOLOR=1 -DCMAKE_BUILD_TYPE=Debug -G Xcode -DCMAKE_SYSTEM_NAME=iOS "-DCMAKE_OSX_ARCHITECTURES=arm64" -DCMAKE_INSTALL_PREFIX=install -DCMAKE_XCODE_ATTRIBUTE_ONLY_ACTIVE_ARCH=NO -DCMAKE_IOS_INSTALL_COMBINED=NO -DCMAKE_OSX_DEPLOYMENT_TARGET=10'

  - task: CMake@1
    displayName: 'Build'
    inputs:
      cmakeArgs: '--build . --config Debug --target install'

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'base-ios'
      targetPath: 'artifacts'
      path: $(System.DefaultWorkingDirectory)/build/install
